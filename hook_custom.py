import win32com.client
import threading
from tkinter.messagebox import showinfo
import tkinter
import time


class Hooks:
    def __init__(self, process_analysis, process_connection):
        self.pa = process_analysis
        self.pc = process_connection

    def run(self):
        win32com.client.pythoncom.CoInitialize()
        process_manager = win32com.client.DispatchWithEvents("DeviareCOM.NktSpyMgr", Callbacks)
        process_manager.set_params(self.pa, self.pc)
        process_manager.Initialize()
        hook = process_manager.CreateHook("kernel32.dll!CreateProcess", 0)
        hook.Hook(True)

        root = tkinter.Tk()
        root.withdraw()
        tkinter.Button(root, text="", command=None).pack(pady=10)
        root.mainloop()


class Callbacks:
    def __init__(self):
        self.pa = None
        self.pc = None

    def set_params(self, process_analysis, process_connection):
        self.pa = process_analysis
        self.pc = process_connection

    def OnProcessStarted(self, py_pid):
        process = win32com.client.Dispatch(py_pid)
        pid = process.Id
        self.pa.new_process(pid)
        #threading.Thread(target=self.pa.new_process, args=(pid,)).start()

    def OnProcessTerminated(self, py_pid):
        process = win32com.client.Dispatch(py_pid)
        pid = process.Id
        threading.Thread(target=self.pa.del_process, args=(pid,)).start()
