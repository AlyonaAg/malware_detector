from collections import defaultdict
from colorama import Fore
from colorama import Style
import const
import capa

danger_counter = {}
danger_details = defaultdict(list)
capa_analysis = {}
pid_path = {}


def add(pid, point):
    if pid in danger_counter.keys():
        danger_counter[pid] += point
    else:
        danger_counter[pid] = point


def add_details(pid, info):
    danger_details[pid].append(info)


def overwriting():
    f = open('danger.statistics', 'w')

    value_list = []
    for value in danger_counter.values():
        value_list.append(value)
    try:
        max_value = max(value_list)
    except:
        max_value = 0

    for key, value in danger_counter.items():
        if not key in capa_analysis and value > 3:
            capa_analysis[key] = True
            thr = capa.CapaThread(pid_path[key], key)
            thr.start()

        f.write(f'[{key}]:'.ljust(15) + '[')
        try:
            padding = int(25 / max_value * value)
        except:
            padding = 0

        for i in range(padding):
            f.write('-')
        for i in range(25 - padding):
            f.write(' ')

        count_connection = danger_details[key].count(const.DANGER_CONNECTION)
        count_imports = danger_details[key].count(const.SUSPICIOUS_IMPORT)
        count_section = danger_details[key].count(const.SUSPICIOUS_SECTION)

        new_details = list(set(danger_details[key]))
        new_details = [const.DANGER_CONNECTION + f'({count_connection})' if d == const.DANGER_CONNECTION
                       else d for d in new_details]
        new_details = [const.SUSPICIOUS_IMPORT + f'({count_imports})' if d == const.SUSPICIOUS_IMPORT
                       else d for d in new_details]
        new_details = [const.SUSPICIOUS_SECTION + f'({count_section})' if d == const.SUSPICIOUS_SECTION
                       else d for d in new_details]

        f.write(f'] {int(100 / max_value * value)}%\t\t' +
                ("[MITRE CHECK]" if key in capa_analysis and capa_analysis[key] else "             ") +
                f'DETAILS:[{value} POINTS; {",".join(new_details)}]\n')

    f.close()
    print(f'{Fore.LIGHTBLACK_EX}[stats updated]{Style.RESET_ALL}')
